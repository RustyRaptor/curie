name    = Renard-Curie
author  = Project Renard
license = Perl_5
copyright_holder = Project Renard
copyright_year   = 2016
version = 0.001

[@Filter]
-bundle = @Basic
-remove = ExtraTests

[AutoPrereqs]
skips = ^Win32

[OSPrereqs / MSWin32]
Win32 = 0
Win32::HideConsole = 0

[Prereqs / DevelopRequires]
; For Test::Perl::Critic plugin
Test::Perl::Critic = 0
Perl::Critic::Policy::CodeLayout::TabIndentSpaceAlign = 0
; authordep App::scan_prereqs_cpanfile
; authordep Pod::Coverage
; authordep Pod::Weaver::Section::Extends
; authordep Pod::Weaver::Section::Consumes
; authordep Pod::Elemental::Transformer::List

[Prereqs]
MooX::Role::Logger = 0

[MetaJSON]
[PkgVersion]
[CheckChangeLog]
[GithubMeta]
[PodWeaver]
[MinimumPerl]
[RunExtraTests] ; run the xt/ tests

[Test::PodSpelling]
stopwords = PNG
stopwords = UI
stopwords = Gtk
stopwords = decrement
stopwords = scrollbar
stopwords = initialises
stopwords = keybindings
stopwords = mutool
stopwords = MuPDF
; for Gtk3::Revealer
stopwords = revealer
; for the function name
stopwords = FOREIGNBUILDARGS
stopwords = DocumentModel
; Types
stopwords = GtkPackType
stopwords = PageNumber
stopwords = LaxPageNumber
stopwords = ZoomLevel
stopwords = RenderableDocumentModel
stopwords = RenderablePageModel
[PodCoverageTests]

[Test::Perl::Critic]

[ReadmeAnyFromPod / ReadmePodInRoot]
; generate README.pod in root (so that it can be displayed on GitHub)
type = pod
filename = README.pod
location = root

[Git::CommitBuild]
; no build commits
branch =
; release commits
release_branch  = build/%b
release_message = Release build of v%v (on %b)

[@Git]
allow_dirty = dist.ini
allow_dirty = README
push_to = origin
push_to = origin build/master:build/master

[Git::Contributors]
remove = stayer
remove = Stayer

[Run::BeforeBuild]
run = ./dev/generate-cpanfile
